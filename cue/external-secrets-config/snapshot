clusterExternalSecret: {
    "openmcp-test": {
        apiVersion: "external-secrets.io/v1beta1"
        kind:       "ClusterExternalSecret"
        metadata: {
            name: "openmcp-test"
            labels: {
                "openmcp.cloud/blueprint-building-block":         "external-secrets-config"
                "openmcp.cloud/blueprint-building-block-version": "0.1.10"
            }
        }
        spec: {
            externalSecretName: "externalSecretName"
            namespaceSelectors: [{
                cool:        "label"
                matchLabels: null
            }]
            refreshTime: "1m"
            externalSecretSpec: {
                data: [{
                    remoteRef: {
                        key:      "provider-key"
                        property: "provider-key-property"
                        version:  "provider-key-version"
                    }
                    secretKey: "secret-key-to-be-managed"
                }]
                dataFrom: [{
                    key:      "provider-key"
                    property: "provider-key-property"
                    version:  "provider-key-version"
                }]
                refreshInterval: "1h"
                secretStoreRef: {
                    kind: "SecretStore"
                    name: "secret-store-name"
                }
                target: {
                    creationPolicy: "Merge"
                    name:           "my-secret"
                    template: {
                        data: {
                            "config.yml": """
                                    endpoints:
                                      - https://{{ .data.user }}:{{ .data.password }}@api.exmaple.com

                                    """
                        }
                        metadata: {
                            annotations: {}
                            labels: {}
                        }
                        templateFrom: [{
                            configMap: {
                                items: [{
                                    key: "alertmanager.yaml"
                                }]
                                name: "alertmanager"
                            }
                        }]
                        type: "kubernetes.io/dockerconfigjson"
                    }
                }
            }
        }
    }
}
clusterSecretStore: {
    "hashicorp-vault-cluster-store": {
        apiVersion: "external-secrets.io/v1beta1"
        kind:       "ClusterSecretStore"
        metadata: {
            name: "hashicorp-vault-cluster-store"
            labels: {
                "openmcp.cloud/blueprint-building-block":         "external-secrets-config"
                "openmcp.cloud/blueprint-building-block-version": "0.1.10"
            }
        }
        spec: {
            controller: "controller"
            provider: {
                vault: {
                    auth: {
                        appRole: {
                            path:   "approle"
                            roleId: "cf33bb15"
                            secretRef: {
                                key:  "token"
                                name: "hashicorp-vault-token"
                            }
                        }
                    }
                    namespace: "ns1"
                    path:      "k8s-clusters"
                    server:    "https://vault.example/"
                    version:   "v2"
                }
            }
        }
    }
}
externalSecret: {
    "openmcp-test": {
        apiVersion: "external-secrets.io/v1beta1"
        kind:       "ExternalSecret"
        metadata: {
            name:      "openmcp-test"
            namespace: "default"
            labels: {
                "openmcp.cloud/blueprint-building-block":         "external-secrets-config"
                "openmcp.cloud/blueprint-building-block-version": "0.1.10"
            }
        }
        spec: {
            refreshInterval: "15m"
            secretStoreRef: {
                name: "hashicorp-vault"
                kind: "SecretStore"
            }
            target: {
                name: "openmcp-test"
            }
            data: [{
                remoteRef: {
                    key:      "j4azdf.laasds.shoot.live.k8s-hana.ondemand.com/garden-openmcp-test"
                    property: "kubeconfig"
                }
                secretKey: "kubeconfig"
            }]
        }
    }
    "garden-openmcp-test-2": {
        apiVersion: "external-secrets.io/v1beta1"
        kind:       "ExternalSecret"
        metadata: {
            name:      "garden-openmcp-test-2"
            namespace: "default"
            labels: {
                "openmcp.cloud/blueprint-building-block":         "external-secrets-config"
                "openmcp.cloud/blueprint-building-block-version": "0.1.10"
            }
        }
        spec: {
            refreshInterval: "15m"
            secretStoreRef: {
                name: "hashicorp-vault"
                kind: "SecretStore"
            }
            target: {
                name: "garden-openmcp-test-2"
            }
            data: [{
                remoteRef: {
                    key:      "j4azdf.laasds.shoot.live.k8s-hana.ondemand.com/garden-openmcp-test"
                    property: "kubeconfig"
                }
                secretKey: "kubeconfig"
            }]
        }
    }
    "btp-account-openmcp-test": {
        apiVersion: "external-secrets.io/v1beta1"
        kind:       "ExternalSecret"
        metadata: {
            name:      "btp-account-openmcp-test"
            namespace: "default"
            labels: {
                "openmcp.cloud/blueprint-building-block":         "external-secrets-config"
                "openmcp.cloud/blueprint-building-block-version": "0.1.10"
            }
        }
        spec: {
            refreshInterval: "15m"
            secretStoreRef: {
                name: "hashicorp-vault-cluster-store"
                kind: "ClusterSecretStore"
            }
            target: {
                name: "btp-account-openmcp-test"
            }
            data: [{
                remoteRef: {
                    key:      "j4azdf.laasds.shoot.live.k8s-hana.ondemand.com/btp-accounts-openmcp-test"
                    property: "btp-cis-provider-credentials"
                }
                secretKey: "btp-cis-provider-credentials"
            }, {
                remoteRef: {
                    key:      "j4azdf.laasds.shoot.live.k8s-hana.ondemand.com/btp-accounts-openmcp-test"
                    property: "btp-service-account-provider-credentials"
                }
                secretKey: "btp-service-account-provider-credentials"
            }]
        }
    }
}
pushSecret: {
    "openmcp-test": {
        apiVersion: "external-secrets.io/v1alpha1"
        kind:       "PushSecret"
        metadata: {
            name:      "openmcp-test"
            namespace: "default"
            labels: {
                "openmcp.cloud/blueprint-building-block":         "external-secrets-config"
                "openmcp.cloud/blueprint-building-block-version": "0.1.10"
            }
        }
        spec: {
            data: [{
                conversionStrategy: "None"
                match: {
                    remoteRef: {
                        remoteKey: "my-first-parameter"
                    }
                    secretKey: "best-pokemon"
                }
            }]
            deletionPolicy:  "Delete"
            refreshInterval: "1h"
            secretStoreRefs: [{
                kind: "SecretStore"
                name: "aws-parameterstore"
            }]
            selector: {
                generatorRef: {
                    apiVersion: "external-secrets.io/v1alpha1"
                    kind:       "ECRAuthorizationToken"
                    name:       "prod-registry-credentials"
                }
                secret: {
                    name: "pokedex-credentials"
                }
            }
            template: {
                data: {
                    "best-pokemon": "{{ .best-pokemon | toString | upper }} is the really best!"
                }
                metadata: {
                    annotations: {}
                    labels: {}
                }
                templateFrom: [{
                    configMap: {
                        items: [{
                            key: "config.yml"
                        }]
                        name: "application-config-tmpl"
                    }
                }]
            }
            updatePolicy: "Replace"
        }
    }
}
secretStore: {
    "hashicorp-vault": {
        apiVersion: "external-secrets.io/v1beta1"
        kind:       "SecretStore"
        metadata: {
            name:      "hashicorp-vault"
            namespace: "default"
            labels: {
                "openmcp.cloud/blueprint-building-block":         "external-secrets-config"
                "openmcp.cloud/blueprint-building-block-version": "0.1.10"
            }
        }
        spec: {
            provider: {
                vault: {
                    auth: {
                        appRole: {
                            path:   "approle"
                            roleId: "cf33bb15"
                            secretRef: {
                                key:  "token"
                                name: "hashicorp-vault-token"
                            }
                        }
                    }
                    namespace: "ns1"
                    path:      "k8s-clusters"
                    server:    "https://vault.example/"
                    version:   "v2"
                }
            }
        }
    }
}
